/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import org.junit.jupiter.api.Test;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;

import static org.junit.jupiter.api.Assertions.*;
import static quotes.App.getInputStreamOrErrorStream;

class AppTest {

    @Test
    void test_getquote_specific_quote() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuote(array, 1);
        assert(sut.equals("Ask no questions, and you'll be told no lies.\n" +
                "-- Charles Dickens"));
    }

    @Test
    void test_getquote_last_quote() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuote(array, array.length - 1);
        assert(sut.equals("办理明尼苏达大学双城分校毕业证|||||||微信Q：930083" +
                "900<<<<<;办理毕业证、办理成绩单、办理教育部学历认证、为留学生办理学历文凭、使馆留学回国人员证明、录取通知书、Off" +
                "er、在读证明、雅思托福成绩单、网上存档永久可查！专业面向“英国、加拿大、意大利，澳洲、新西兰、美国 ”等国的学历学位" +
                "真实教育部认证、使馆认证。专业办理国外各高校的毕业证，成绩单，长期专业为留学生解决毕业难的问题，【实体公司，值得信赖】\n" +
                "-- 办理明尼苏达大学双城分校毕业证[学历认证University of Minnesota Twin Cities"));
    }

    @Test
    void test_getquotearray_correct_size() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] sut = App.getQuotesArray(recentQuotesJSONFile);
        assert(sut.length == 138);
    }

    @Test
    void test_getquotebyauthor_pass() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuoteByAuthor(array, "Marilyn Monroe");
        assert(sut.endsWith("Marilyn Monroe"));
    }

    @Test
    void test_getquotebyauthor_fail() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuoteByAuthor(array, "potato");
        assert(sut.endsWith("Nothing found."));
    }

    @Test
    void test_getquotebyquotetext_pass() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuoteByQuoteText(array, "The stupid monkey.");
        assert(sut.endsWith("Richard Rider"));
    }

    @Test
    void test_getquotebyquotetext_fail() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String sut = App.getQuoteByQuoteText(array, "this ONE is not ON the quote list");
        assert(sut.endsWith("Nothing found."));
    }

    @Test
    void test_getinternetquote() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        String forsmaticApiUrl = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String apiLine = App.getApiLine(forsmaticApiUrl);
        Quote sut = App.getInternetQuote(apiLine, array);
        assertNotNull(sut);
    }

    @Test
    void test_getinternetquote_bad_api_response() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        String badForsmaticApiUrl = "http://api.forismatic.com/api/1.0/BADBADBAD";
        String apiLine = App.getApiLine(badForsmaticApiUrl);
        Quote sut = App.getInternetQuote(apiLine, array);
        assertNull(sut);
    }

    @Test
    void test_getapiline() {
        String apiLine;
        String forsmaticApiUrl = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        apiLine = App.getApiLine(forsmaticApiUrl);
        assertNotEquals(apiLine, "");
    }

    @Test
    void test_getappendedarray() {
        File recentQuotesJSONFile = new File("./src/test/resources/recentquotes.json");
        Quote[] array = App.getQuotesArray(recentQuotesJSONFile);
        Quote quote = new Quote("test author", "test text");
        Quote[] sut = App.getAppendedArray(quote, array);
        assert(sut.length == array.length + 1);
    }

    @Test
    void test_getinputstreamorerrorstream() {
        try {
            String forsmaticApiUrl = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
            URL apiUrl = new URL(forsmaticApiUrl);
            URLConnection apiConnection = apiUrl.openConnection();
            HttpURLConnection apiHTTPConnection = (HttpURLConnection) apiConnection;
            apiHTTPConnection.setRequestMethod("GET");
            InputStreamReader sut = getInputStreamOrErrorStream(apiHTTPConnection);
            assertNotNull(sut);
        } catch (IOException ioe) {
            System.out.println("Unable to create connection");
            ioe.printStackTrace();
        }
    }


}
